# Copyright (C) 2006, 2007, 2008, 2009, 2010, 2011, 2012 Brailcom, o.p.s.
# Author: Tomas Cerha <cerha@brailcom.org>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

"""Definition of Wiking configuration options.

The options defined here are generic options for Wiking itself.  Application specific options may
exist for particular Wiking applications, such as Wiking CMS.

Each option has a short description and documentation.  The convention is to make the description
as short as possible (well, as long as it is meaningful) and put all additional information into
the documentation.  The description may be used as field label within Wiking CMS web based
configuration.  The documentation is used as field help in this case.  The options which are
available through Wiking CMS web based configuration have the description and documentation marked
for translation (using the underscore function).  Another usage of these values in the
automatically generated configuration, where the description is used as a section title (and very
long titles will look odd as well).

The docstring of the 'Configuration' class below is also used within the documentation.  That's
also why this docstring as well as option documentation strings may use LCG formatting (the
documentation is generated by LCG).

"""

from wiking import *

_ = lcg.TranslatableTextFactory('wiking-cms')

pc = pytis.util.Configuration


class Configuration(pc):
    """Wiking Configuration.

    Wiking configuration options can be set through configuration files.  There is one global
    configuration file and it is possible to override configuration options for individual site
    through a site specific configuration file.

    The global configuration file is searched in the following locations:
    
      * \/etc/wiking/config.py
      * \/etc/wiking.py
      * \/usr/local/etc/wiking/config.py
      * \/usr/local/etc/wiking.py

    First of the named files which exists is used.

    Site specific configuration file must be set through the web server's
    configiration and the particular syntax depends on the web server
    environment being used.  Examples for Apache/mod_python and Apache/mod_wsgi
    follow.

    Apache/mod_python (inside the VirtualHost directive):
    -----
      PythonOption config_file /etc/wiking/sites/mysite.py
    -----
    
    Apache/mod_wsgi (inside the VirtualHost directive):
    -----
      SetEnv wiking.config_file /etc/wiking/sites/mysite.py
    -----

    See [apache] for more details.
    
    Once the configuration file is set, its actual content is independent of
    the web server environment.  The configuration file uses Python syntax to
    assign values to configuration options.  The supported options are
    described below.  Options, which are not found in one of the configuration
    files will retain their default value (listed below for each option).

    The configuration files are re-read automatically in runtime whenever the
    file is modified so in general you should not need to reload the server for
    the changes to take effect.  Some options, however, initialize persistent
    objects and you may need to reload the server in order to reload these
    persistent objects.

    Please note, that Wiking CMS will override many of the configuration
    options by values set through the Wiking Management Interface.

    """
    class _Option_config_file(pc.StringOption, pc.HiddenOption):
        _DESCR = "Wiking global configuration file location"
        def default(self):
            for filename in ('/etc/wiking/config.py', '/etc/wiking.py',
                             '/usr/local/etc/wiking/config.py', '/usr/local/etc/wiking.py'):
                if os.access(filename, os.F_OK):
                    return filename
            return None

    class _Option_user_config_file(pc.StringOption, pc.HiddenOption):
        _DESCR = "Site specific configuration file location"
        def default(self):
            try:
                import wikingconfig
            except ImportError:
                return None
            filename = wikingconfig.__file__
            if filename.endswith('.pyc') or filename.endswith('.pyo'):
                filename = filename[:-1]
            return filename
        
    class _Option_modules(pc.Option):
        _DESCR = "Wiking module search order"
        _DOC = ("A sequence of names of Python modules (as strings) used to search for Wiking "
                "module class definitions.  The named Python modules will be searched in given "
                "order and they must be available through Python path.")
        _DEFAULT = ('wiking.cms', )
        
    class _Option_dbname(pc.StringOption):
        _DESCR = "Database name"
        _DOC = ("Name of the database to connect to.  If not defined, the server name of the "
                "current virtual host will be used.")

    class _Option_dbhost(pc.StringOption):
        _DESCR = "Database host"
        _DOC = ("If None (default) Wiking will connect to the database through UNIX domain "
                "sockets.  If a hostname or IP address is specified, Wiking will connect "
                "to given host through a network socket.")

    class _Option_dbport(pc.NumericOption):
        _DESCR = "Database port number"

    class _Option_dbuser(pc.StringOption):
        _DESCR = "Database user"
        
    class _Option_dbpass(pc.StringOption):
        _DESCR = "Database password"
        
    class _Option_dbsslm(pc.StringOption):
        _DESCR = "Database ssl mode"
        
    class _Option_dbschemas(pc.StringOption):
        _DESCR = "List of database schemas to use in the order of their preference"

    class _Option_connections(pc.Option):
        _DESCR = "Alternative database connections."
        _DOC = ("Wiking modules normally use the default database connection defined by 'dbname', "
                "'dbhost', 'dbport', 'dbuser', 'dbpass' and 'dbsslm', but certain applications may require "
                "multiple database connections.  If your installation uses modules employing "
                "alternative connections, you must configure them using this option.  The value is "
                "a dictionary assigning a connection specification to each connection by name. "
                "Connection names are defined by applications (each application should mention the "
                "names of used conections in its documentation).  The connection specification "
                "(the value assigned to a connection name) is a dictionary with keys 'dbname', "
                "'dbhost', 'dbport', 'dbuser' and 'dbpass'.  Only 'dbname' is mandatory.  Their "
                "meaning and default values are the same as for the configuration options of the "
                "same names specifying the properties of the default connection.")
        _DEFAULT = {}
        
    class _Option_maintenance(pc.BooleanOption):
        _DESCR = "Maintenance mode flag"
        _DOC = ("Setting this value to True will tell Wiking to run in the maintenance mode. "
                "This mode is mostly useful for server administration tasks, which require "
                "exclusive access to the database.  Wiking will not attempt to connect to "
                "the database in this mode and will display a polite error message in response "
                "to requests, which would require database access.")
        _DEFAULT = False
        
    class _Option_smtp_server(pc.StringOption):
        _DESCR = "Name or address of SMTP server"
        _DOC = ("SMTP server is used for sending bug reports by e-mail.  To allow this feature, "
                "you must also supply the 'bug_report_address' option.")
        _DEFAULT = 'localhost'

    class _Option_smtp_port(pc.NumericOption):
        _DESCR = "Port for SMTP server"
        _DOC = ("SMTP server port")
        _DEFAULT = 25

    class _Option_allow_smtp_email_validation(pc.BooleanOption):
        _DESCR = "Allow SMTP e-mail validation"
        _DOC = ("Wiking email validation functions may use SMTP to verify the existence of an "
                "e-mail account on the remote mail server.  Some installations, however, may "
                "not allow the server to create such SMTP connections (e.g. when the server "
                "is located behind a firewall).  This option allows you to disable SMTP checking "
                "in such situations.  If disabled, the mail addres domain is only checked "
                "through DNS")
        _DEFAULT = True
        
    class _Option_debug(pc.BooleanOption):
        _DESCR = "Debugging mode"
        _DOC = ("Turn on the debugging mode to allow sending detailed exception tracebacks to "
                "the browser rather than logging it to servers error log.  Note, that tracebacks "
                "may contain sensitive information, so this mode should never be on in a "
                "production environment.  It is only intended for developers.")
        _DEFAULT = False
        
    class _Option_bug_report_address(pc.StringOption):
        _DESCR = "E-mail address where bug reports will be sent"
        _DOC = ("Tracebacks of uncaught exceptions are sent automatically by e-mail to the "
                "specified address.  If None, bug reports are not sent by e-mail.  In any case "
                "they are logged to server's error log.")
        _DEFAULT = None

    class _Option_webmaster_address(pc.StringOption):
        _DESCR = _("Webmaster's e-mail address")
        _DOC = ("Webmaster's address is used as public contact address for the site. It is "
                "displayed at the bottom of each page, in error messages, RSS feeds and so on. "
                "If no address is given, it will be automatically set to 'webmaster@DOMAIN', "
                "where DOMAIN is the domain part of the server hostname if the hostname starts "
                "with 'www.' or the whole server hostname in other cases.  Please make sure "
                "that this address is valid (e-mail sent to it is delivered to a responsible "
                "person).")
        _DEFAULT = None

    class _Option_default_sender_address(pc.StringOption):
        _DESCR = _("Default sender address")
        _DOC = ("E-mail messages sent by the system, such as automatic notifications, password "
                "reminders, bug-reports etc. will use this sender address.  If no address is "
                "given, it will be automatically set to 'wiking@DOMAIN', where DOMAIN is the "
                "domain part of the server hostname if the hostname starts with 'www.' or the "
                "whole server hostname in other cases.  Please make sure that this address is "
                "valid (e-mail sent to it is delivered to a responsible person).")
        _DEFAULT = None        
        
    class _Option_https_ports(pc.Option):
        _DESCR = "HTTPS port numbers"
        _DOC = ("The default HTTPS port is 443 but certain server configurations may require "
                "using a different port or several ports for HTTPS connections.")
        _DEFAULT = (443,)
        
    class _Option_force_https_login(pc.BooleanOption):
        # Translation: ``Force'' means ,,do not allow otherwise'', sentence in imperative followed by a checkbox.
        _DESCR = _("Force HTTPS login")
        _DOC = _("If enabled, the login form will always be redirected to an HTTPS address "
                 "to ensure the security of the submitted credentials.  This, however, requires "
                 "your server to be setup to accept HTTPS requests for the same virtual host and "
                 "pass them to Wiking.")
        _DEFAULT = False

    class _Option_allow_http_authentication(pc.BooleanOption):
        # Translation: ``Force'' means ,,do not allow otherwise'', sentence in imperative followed by a checkbox.
        _DESCR = _("Allow HTTP authentication")
        _DOC = ("Wiking supports HTTP Basic authentication scheme.  You may need to "
                "disable it if you want to perform HTTP authentication outside Wiking "
                "(Apache) or disable it alltogether due to its insufficient security.")
        _DEFAULT = True

    class _Option_translation_path(pc.Option):
        _DESCR = "Translation search path"
        _DOC = ("The value is a sequence of directory names (strings), where locale data are "
                "searched.  These directories depend on your installation.  Each directory "
                "should contain a subdirectory 'lang/LC_MESSAGES' and a file 'domain.mo' in it, "
                "where lang is the language code and domain is the translation domain name.")
        def default(self):
            return ('/usr/local/share/wiking/translations',
                    '/usr/local/share/lcg/translations',
                    '/usr/local/share/pytis/translations')

    class _Option_resource_path(pc.Option):
        _DESCR = "Resource search path"
        _DOC = ("The value is a sequence of directory names (strings), where resource files, "
                "such as images, media or scripts are searched.  The directories are searched "
                "in given order.  Files may be put into type specific subdirectories (jpegs and "
                "pngs into 'images', stylesheets into 'css', javascripts into 'scripts') or to "
                "the resource direcotries directly.  Wiking will return a 404 error and log the "
                "exact list of directories where a particular file is searched when it is unable "
                "to locate it.  Beware that all files located within the named directories will "
                "be directly exposed to the Internet!")
        def default(self):
            return ('/usr/local/share/wiking/resources',
                    '/usr/local/share/lcg/resources',
                    '/usr/local/share/pytis/resources')
        
    class _Option_doc_dirs(pc.Option):
        _DESCR = "Documentation search directories"
        _DOC = ("The value is a dictionary of directory names keyed by component "
                "identifiers.  Component identifiers are unique strings identifying different "
                "components of a Wiking application.  Core Wiking requires directories for two "
                "components: 'wiking' and 'lcg'.  Wiking applications may require access to "
                "documentation of additional components (application specific documentation). "
                "Dictionary values are names of directories containing documentation source "
                "files, such as full path to the 'doc/src' subdirectory of the wiking package.")
        def default(self):
            return {'wiking': '/usr/local/share/wiking/doc/src',
                    'lcg': '/usr/local/share/lcg/doc/src'}

    class _Option_server_hostname(pc.StringOption):
        _DESCR = "Primary server host name"
        _DOC = ("This value may be used by applications to distinguish "
                "between separate servers.  One server may still have multiple "
                "aliases so it can be accessed under different server names (as "
                "returned by 'wiking.Request.server_hostname()'), but this "
                "configuration option will have the same value for all servers "
                "which belong to one primary server (or more precisely, all "
                "servers, which share the same configuration).  This is usually "
                "also the primary (official) server name.  The primary server, "
                "however, is typically still a virtual server and there may be "
                "several primary servers on one physical host.")
        _DEFAULT = None
        
    class _Option_site_title(pc.StringOption):
        # Translators: Site means a webpage or web application.
        _DESCR = _("Site title")
        _DOC = _("Site title is a short and (hopefully) unique title of the whole website. "
                 "It will appear at the top of every page.")
        _DEFAULT = 'Wiking site'

    class _Option_site_subtitle(pc.StringOption):
        # Translators: Site means a webpage or web application. Subtitle as in ,,title -- subtitle''.
        _DESCR = _("Site subtitle")
        _DOC = _("Site subtitle is an optional more descriptive title of the website.  It will "
                 "appear at the top of every page together with site title, but where brevity "
                 "matters, only title will be used.")
        _DEFAULT = None
        
    class _Option_site_icon(pc.StringOption):
        # Translators: Web page or web application specific image.
        _DESCR = _("Site icon")
        _DOC = ("Full file path to the site icon to be served as '/favicon.ico'. "
                "See http://en.wikipedia.org/wiki/Favicon for more information. "
                "Only ICO format icons are currently supported.")
        _DEFAULT = None

    class _Option_theme(pc.Option):
        _DESCR = "Color theme"
        _DOC = ("Color theme is a set of predefined colors to be used for style sheet color "
                "substitution.  Thus Wiking style sheets may be color neutral and colors may "
                "be defined separately.  The value is an instance of 'wiking.Theme' class.")
        _DEFAULT = Theme()

    class _Option_default_language(pc.StringOption):        
        _DESCR = _("Default language")
        # Translators: Language negotiation means the process where the server is trying
        # to find a language that matches with what the users internet browser asks for.
        _DOC = _("Defines the language (lowercase ISO 639-1 Alpha-2 code) to be used when "
                 "content language negotiation fails. If not set (which is the default), the "
                 "server will issue a 606 HTTP error (Not acceptable) when the document is "
                 "not available in any of the requested languages. The error page will contain "
                 "a description of the problem and a list of available language variants of "
                 "the requested document. The negotiation is based on the browser setting of "
                 "user's language preference passed through the 'Accept-Language' HTTP header. "
                 "If set, Wiking will automatically serve given language variant instead of "
                 "issuing the error if that variant is available.  If unavailable, the 606 "
                 "error is raised anyway, so you need to make sure that all documents are "
                 "available at least in the default language variant if you want to avoid 606 "
                 "errors completely.")
        _DEFAULT = None
            
    class _Option_default_language_by_domain(pc.Option):
        # Translators: Settings label. Meaning default language
        # according to the domain a user comes from
        _DESCR = "Default language by server domain name"
        _DOC = ("Allows setting different default language based on the server domain name.  The "
                "value is a dictionary, where the server name is a key and language code is "
                "a value.  If the server domain name of the current request is found in the "
                "dictionary, the assigned value overrides the value of 'default_language' for "
                "given request.")
        _DEFAULT = {}
        
    class _Option_language_selection_image(pc.StringOption):
        # Translators: Settings label. URI means a link. Do not translate ''URI''.
        _DESCR = "URI of images used in language selection menu."
        _DOC = ("If defined, the language selection links will include images (typically national "
                "flags).  The value is a string where '%s' is replaced by the language code of a "
                "particular language to get the URI of an image used for that language.  It is up "
                "to the developer/administrator to ensure that the resulting URIs are handled "
                "correctly and images of all used languages are available.")
        _DEFAULT = None

    class _Option_session_expiration(pc.NumericOption):
        _DESCR = "Session expiration"
        _DOC = ("A number of hours to keep the login session alive.  The session is automatically "
                "terminated when the user has no activity for given time interval.")
        _DEFAULT = 2
      
    class _Option_resolver(pc.Option):
        _DESCR = "Wiking module resolver"
        _DOC = ("Module resolver is used to locate available Wiking modules.  The value must be "
                "a 'WikingResolver' instance.  If not set, the default instance will be created "
                "by Wiking handler in the initialization phase, passing it the value of "
                "the configuration option 'modules' defined above.  If you supply your own "
                "instance, the configured value of 'modules' will have no effect.")
        
    class _Option_exporter(pc.Option):
        _DESCR = "Page exporter class"
        _DOC = ("Exporter is responsible for rendering the final page.  It gets the logical "
                "description of the page elements on input and outputs its representation in "
                "HTML/XHTML/XML or any other desired format.  You can make minor page display "
                "customizations, change the layout completely or use another output format by "
                "overriding the default exporter.  See LCG documentation for more information "
                "about the export mechanism.")
        _DEFAULT = Exporter

    class _Option_display_role_in_login_panel(pc.BooleanOption):
        # Translators: Yes/No configuration option label. Should the login panel display user role (as Admin, Student, Tutor etc.)
        _DESCR = _("Display role in login panel")
        _DOC = _("If enabled, the login panel on each page will not display only the current "
                 "username, but also his current user role, which affects his permissions.")
        _DEFAULT = False
        
    class _Option_immediate_filters(pc.BooleanOption, pc.HiddenOption):
        _DESCR = ("Whether to apply filtering combobox selection immediately.")
        _DEFAULT = True

    class _Option_ignored_crypto_names(pc.Option):
        _DESCR = "Sequence of ignored crypto names"
        _DOC = ("Ignored crypto names don't raise decryption password dialog and "
                "show obfuscated data instead.")
        _DEFAULT = ()

    # The following options are actually Wiking CMS specific, but we have them here to allow their
    # setting through a configuration file.  As soon as the support for application specific
    # configuration files is ready, the options should be moved to CMS configuration.  The options
    # are currently marked as hidden to prevent them in the automatically generated documentation.

    class _Option_sql_dir(pc.StringOption):
        _DESCR = "SQL directory"
        _DOC = ("The directory where Wiking CMS database initialization/upgrade scripts "
                "can be found.")
        _DEFAULT = '/usr/local/share/wiking/sql'
        
    class _Option_image_thumbnail_sizes(pc.Option):
        _DESCR = "Sequence available image thumbnail sizes"
        _DOC = ("Sequence of three integers denoting the pixel size of small, "
                "medium and large image thumbnail.  The images are resized so "
                "that their longer side is at most given size (the short side "
                "is smaller to maintain the image proportion).")
        _DEFAULT = (120, 180, 240)
        
    class _Option_image_screen_size(pc.Option):
        _DESCR = "Enlarged image screen size"
        _DOC = ("Pair of integers (width, height) in pixels denoting the maximal size "
                "of an image when displayed on screen (after clicking the thumbnail). "
                "This "
                "size is usually smaller than the original image size (which "
                "may be larger than the screen size).  If the original is smaller")
        _DEFAULT = (800, 800)
        
